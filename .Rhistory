suppressWarnings(suppressPackageStartupMessages(require(tidyverse)))
suppressWarnings(suppressPackageStartupMessages(require(lme4)))
suppressWarnings(suppressPackageStartupMessages(require(ggplot2)))
suppressWarnings(suppressPackageStartupMessages(require(RColorBrewer)))
suppressWarnings(suppressPackageStartupMessages(require(fitdistrplus)))
suppressWarnings(suppressPackageStartupMessages(require(glmmADMB)))
suppressWarnings(suppressPackageStartupMessages(require(MuMIn)))
suppressWarnings(suppressPackageStartupMessages(require(lubridate)))
suppressWarnings(suppressPackageStartupMessages(require(DHARMa)))
suppressWarnings(suppressPackageStartupMessages(require(glmmTMB)))
suppressWarnings(suppressPackageStartupMessages(require(dplyr)))
suppressWarnings(suppressPackageStartupMessages(require(stringr)))
suppressWarnings(suppressPackageStartupMessages(require(scales)))
suppressWarnings(suppressPackageStartupMessages(require(lmerTest)))
mert = read.csv("Mertensia_final3.csv") # read in Mertensia data
mert$prop.dev.seeds<-(mert$dev.seed/mert$total.seeds) #adding proportion of developed seeds
mert$deviation<-abs(mert$relative.position) #getting deviation from the peak
#creating early/late variables based on relative position
mert$early.late<-factor(NA, levels = c("early","late"))
mert$early.late[mert$relative.position<0]<-"early"
mert$early.late[mert$relative.position>0]<-"late"
mert<-mert[!is.na(mert$early.late),]
#removing NAs
mert<-mert[!is.na(mert$dev.seed),]
mert$prop.dev.seeds[is.na(mert$prop.dev.seeds)] <-0
mert = read.csv("Mertensia_final3.csv") # read in Mertensia data
mert$prop.dev.seeds<-(mert$dev.seed/mert$total.seeds) #adding proportion of developed seeds
mert$deviation<-abs(mert$relative.position) #getting deviation from the peak
#creating early/late variables based on relative position
mert$early.late<-factor(NA, levels = c("early","late"))
mert$early.late[mert$relative.position<0]<-"early"
mert$early.late[mert$relative.position>0]<-"late"
mert<-mert[!is.na(mert$early.late),]
#removing NAs
mert<-mert[!is.na(mert$dev.seed),]
mert$prop.dev.seeds[is.na(mert$prop.dev.seeds)] <-0
delph = read.csv("Delphinium_final2.csv") # read in Delphinium data
delph$undev.seed1[is.na(delph$undev.seed1)] <- 0 #converting NA to 0
delph$dev.seed.total<-delph$dev.seed+delph$dev.seed1 #creating developed seeds column
delph$undev.seed.total<-delph$undev.seed+delph$undev.seed1 #creating undeveloped seeds column
delph$prop.dev.seeds<-(delph$dev.seed.total/(delph$dev.seed.total+delph$undev.seed.total)) #adding proportion of developed seeds
delph$deviation<-abs(delph$relative.position) #getting deviation from the peak
#creating early/late variables based on relative position
delph$early.late<-factor(NA, levels = c("early","late"))
delph$early.late[delph$relative.position<0]<-"early"
delph$early.late[delph$relative.position>0]<-"late"
delph<-delph[!is.na(delph$early.late),]
#removing NAs
delph<-delph[!is.na(delph$dev.seed.total),]
delph$prop.dev.seeds[is.na(delph$prop.dev.seeds)] <-0
pot = read.csv("Potentilla_final2.csv") # read in Potentilla data
pot$deviation<-abs(pot$relative.position) #getting deviation from the peak
#creating early/late variables based on relative position
pot$early.late<-factor(NA, levels = c("early","late"))
pot$early.late[pot$relative.position<0]<-"early"
pot$early.late[pot$relative.position>0]<-"late"
#removing NAs
pot<-pot[!is.na(pot$early.late),]
flower.counts=read.csv("./Raw_data/flower_counts.csv") #read in flower count data
mert.flower.counts<-flower.counts[(flower.counts$plant=="Mertensia fusiformis"),] #limit flower counts to Mertensia data
mert.counts.by.site<-aggregate(x=mert.flower.counts$total_flowers,by=list(mert.flower.counts$date,mert.flower.counts$site,mert.flower.counts$plot),FUN="mean") #calculate mean flower counts by week and site
colnames(mert.counts.by.site)<-c("date","site","plot.treat","number.conspecifics")
#changing class to adjust names
mert.counts.by.site$site<-as.character(mert.counts.by.site$site)
mert.counts.by.site$plot.treat<-as.character(mert.counts.by.site$plot.treat)
#fixing names
mert.counts.by.site$site[mert.counts.by.site$site=="Avery Picnic"]<-"AveryPicnic"
mert.counts.by.site$site[mert.counts.by.site$site=="Stupid Falls"]<-"StupidFalls"
mert.counts.by.site$site[mert.counts.by.site$site=="Wash 3C"]<-"WG3C"
mert.counts.by.site <-mert.counts.by.site[!(mert.counts.by.site$plot.treat=="Kaysee"),]
mert.counts.by.site$plot.treat[mert.counts.by.site$plot.treat=="Control"]<-"control"
mert.counts.by.site$plot.treat[mert.counts.by.site$plot.treat=="Manipulated"]<-"manip"
#calculating week numbers in preparation for the merge
mert$week.estimate<-strftime(mert$midpoint, format = "%V")
mert.counts.by.site$week.estimate<-strftime(mert.counts.by.site$date, format = "%V")
mert<-merge(mert,mert.counts.by.site, by.x = c("site","plot.treat","week.estimate"), by.y = c("site","plot.treat","week.estimate")) #merging by site, plot treatment, and week estimate
delph.flower.counts<-flower.counts[(flower.counts$plant=="Delphinium nuttallianum"),] #limit flower counts to Delphinium data
delph.counts.by.site<-aggregate(x=delph.flower.counts$total_flowers,by=list(delph.flower.counts$date,delph.flower.counts$site,delph.flower.counts$plot),FUN="mean") #calculate mean flower counts by week and site
colnames(delph.counts.by.site)<-c("date","site","plot.treat","number.conspecifics")
#changing class to adjust names
delph.counts.by.site$site<-as.character(delph.counts.by.site$site)
delph.counts.by.site$plot.treat<-as.character(delph.counts.by.site$plot.treat)
#fixing names
delph.counts.by.site$site[delph.counts.by.site$site=="Rustlers Gulch"]<-"RustlersGulch"
delph.counts.by.site$site[delph.counts.by.site$site=="Wash 3C"]<-"WG3C"
delph.counts.by.site <-delph.counts.by.site[!(delph.counts.by.site$plot.treat=="Kaysee"),]
delph.counts.by.site$plot.treat[delph.counts.by.site$plot.treat=="Control"]<-"control"
delph.counts.by.site$plot.treat[delph.counts.by.site$plot.treat=="Manipulated"]<-"manip"
#calculating week numbers in preparation for the merge
delph$week.estimate<-strftime(delph$midpoint, format = "%V")
delph.counts.by.site$week.estimate<-strftime(delph.counts.by.site$date, format = "%V")
delph<-merge(delph,delph.counts.by.site, by.x = c("site","plot.treat","week.estimate"), by.y = c("site","plot.treat","week.estimate")) #merging by site, plot treatment, and week estimate
pot.flower.counts<-flower.counts[(flower.counts$plant=="Potentilla pulcherrima"),] #limit flower counts to Potentilla data
pot.counts.by.site<-aggregate(x=pot.flower.counts$total_flowers,by=list(pot.flower.counts$date,pot.flower.counts$site,pot.flower.counts$plot),FUN="mean") #calculate mean flower counts by week and site
colnames(pot.counts.by.site)<-c("date","site","plot.treat","number.conspecifics")
#changing class to adjust names
pot.counts.by.site$site<-as.character(pot.counts.by.site$site)
pot.counts.by.site$plot.treat<-as.character(pot.counts.by.site$plot.treat)
#fixing names
pot.counts.by.site$site[pot.counts.by.site$site=="Rustlers Gulch"]<-"RustlersGulch"
pot.counts.by.site$site[pot.counts.by.site$site=="Wash 3C"]<-"WG3C"
pot.counts.by.site$site[pot.counts.by.site$site=="Bellview Bench"]<-"BellviewBench"
pot.counts.by.site$site[pot.counts.by.site$site=="Avery Picnic"]<-"AveryPicnic"
pot.counts.by.site$site[pot.counts.by.site$site=="Stupid Falls"]<-"StupidFalls"
pot.counts.by.site <-pot.counts.by.site[!(pot.counts.by.site$plot.treat=="Kaysee"),]
pot.counts.by.site$plot.treat[pot.counts.by.site$plot.treat=="Control"]<-"control"
pot.counts.by.site$plot.treat[pot.counts.by.site$plot.treat=="Manipulated"]<-"manip"
#calculating week numbers in preparation for the merge
pot$week.estimate<-strftime(pot$midpoint, format = "%V")
pot.counts.by.site$week.estimate<-strftime(pot.counts.by.site$date, format = "%V")
pot<-merge(pot,pot.counts.by.site, by.x = c("site","plot.treat","week.estimate"), by.y = c("site","plot.treat","week.estimate")) #merging by site, plot treatment, and week estimate
mert.open<-mert[(mert$treat=="open"),] #removed hand pollination treatment
mert.nbinom<-fitdist(mert.open$dev.seed, "nbinom") #fitting Mertensia data to negative binomial distribution using fitdistplus
ggplot(mert.open, aes(x=mert.open$relative.position, y=mert.open$dev.seed, group=mert.open$plot.treat)) +
labs(y="Total Developed Seeds",x="Days Relative to Population Peak Bloom", title="Effect of Mertensia Blooming Time on Total Developed Seeds") +
geom_point(aes(color=plot.treat),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkred","manip"="darkorange")) +
geom_smooth()
ggplot(mert.open, aes(x=mert.open$relative.position, y=mert.open$dev.seed, group=mert.open$early.late)) +
labs(y="Total Developed Seeds",x="Days Relative to Population Peak Bloom", title="Effect of Mertensia Blooming Time on Total Developed Seeds") +
theme_classic() +
geom_point(aes(color=early.late),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
geom_smooth(method = "glm", aes(color=early.late))
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,9,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=7,y=2,label="p = 0.088")
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,9,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=7,y=2,label="p = 0.088")+
theme(axis.text = element_text(size=14))
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,9,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=7,y=2,label="p = 0.088")+
theme(axis.text = element_text(size=12))
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,9,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=7,y=2,label="p = 0.088")+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14))
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,9,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=7,y=2,label="p = 0.088")+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14))
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,9,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=7,y=2,label="p = 0.088")+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=10))
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,9,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=7,y=2,label="p = 0.088")+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,9,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=7,y=2,label="p = 0.088",size=12)+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,9,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=7,y=2,label="p = 0.088",size=5)+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
ggplot(mert.open, aes(x=mert.open$number.conspecifics, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$plot.treat)) +
labs(y="Total Developed Seeds per Flower",x="Conspecific Density", title="Mertensia") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle"))
ggplot(mert.open, aes(x=mert.open$number.conspecifics, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$plot.treat)) +
labs(y="Total Developed Seeds per Flower",x="Conspecific Density", title="Mertensia") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle"))+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
ggplot(mert.open, aes(x=mert.open$number.conspecifics, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$plot.treat)) +
labs(y="Total Developed Seeds per Flower",x="Conspecific Density", title="Mertensia") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated"), values = c("control"="circle","manip"="triangle"))+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
delph.open<-delph[(delph$treat=="open"),] #removed hand pollination treatment
ggplot(delph.open, aes(x=delph.open$relative.position, y=delph.open$total.seeds, group=plot.treat)) +
labs(title="Effect of Delphinium Blooming Time on Total Developed Seeds", y="Total Developed Seeds",x="Days Relative to Population Peak Bloom") +
geom_point(aes(color=plot.treat),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkred","manip"="darkorange")) +
geom_smooth()
ggplot(delph.open, aes(x=delph.open$relative.position, y=delph.open$total.seeds, group=delph.open$early.late)) +
labs(y="Total Developed Seeds",x="Days Relative to Population Peak Bloom", title="Effect of Delphinium Blooming Time on Total Developed Seeds") +
theme_classic() +
geom_point(aes(color=early.late),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
geom_smooth(method = "glm", aes(color=early.late))
ggplot(delph.open, aes(x=delph.open$deviation, y=(delph.open$total.seeds/delph.open$X.flowers), group= delph.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Delphinium") +
theme_classic() +
scale_x_continuous(breaks=seq(0,10,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=9,y=30,label="p = 0.025")
ggplot(delph.open, aes(x=delph.open$deviation, y=(delph.open$total.seeds/delph.open$X.flowers), group= delph.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Delphinium") +
theme_classic() +
scale_x_continuous(breaks=seq(0,10,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=9,y=30,label="p = 0.025")+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
ggplot(delph.open, aes(x=delph.open$deviation, y=(delph.open$total.seeds/delph.open$X.flowers), group= delph.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Delphinium") +
theme_classic() +
scale_x_continuous(breaks=seq(0,10,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=9,y=30,label="p = 0.025",size=5)+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
ggplot(delph.open, aes(x=delph.open$number.conspecifics, y=delph.open$total.seeds/delph.open$X.flowers, group= delph.open$plot.treat)) +
labs(y="Total Developed Seeds per Flower",x="Conspecific Density", title="Delphinium") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle"))+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
ggplot(delph.open, aes(x=delph.open$number.conspecifics, y=delph.open$total.seeds/delph.open$X.flowers, group= delph.open$plot.treat)) +
labs(y="Total Developed Seeds per Flower",x="Conspecific Density", title="Delphinium") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated"), values = c("control"="circle","manip"="triangle"))+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
pot.open<-pot[(pot$treat=="open"),] #removed hand pollination treatment
ggplot(pot.open, aes(x=pot.open$relative.position, y=pot.open$total.seeds, group=plot.treat)) +
labs(title="Effect of Potentilla Blooming Time on Total Developed Seeds", y="Total Developed Seeds",x="Days Relative to Population Peak Bloom") +
geom_point(aes(color=plot.treat),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkred","manip"="darkorange")) +
geom_smooth()
ggplot(pot.open, aes(x=pot.open$relative.position, y=pot.open$total.seeds, group=pot.open$early.late)) +
labs(y="Total Developed Seeds",x="Days Relative to Population Peak Bloom", title="Effect of Potentilla Blooming Time on Total Developed Seeds") +
theme_classic() +
geom_point(aes(color=early.late),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
geom_smooth(method = "glm", aes(color=early.late))
ggplot(pot.open, aes(x=pot.open$deviation, y=pot.open$total.seeds/pot.open$X.flowers, group= pot.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom",title="Potentilla") +
theme_classic() +
scale_x_continuous(breaks=seq(0,24,2)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=22,y=17,label="p < 0.01")
ggplot(pot.open, aes(x=pot.open$deviation, y=pot.open$total.seeds/pot.open$X.flowers, group= pot.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom",title="Potentilla") +
theme_classic() +
scale_x_continuous(breaks=seq(0,24,2)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=22,y=17,label="p < 0.01",size=5)+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
ggplot(pot.open, aes(x=pot.open$number.conspecifics, y=pot.open$total.seeds/pot.open$X.flowers, group= pot.open$plot.treat)) +
labs(y="Total Developed Seeds per Flower",x="Conspecific Density", title="Potentilla") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle"))+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
ggplot(pot.open, aes(x=pot.open$number.conspecifics, y=pot.open$total.seeds/pot.open$X.flowers, group= pot.open$plot.treat)) +
labs(y="Total Developed Seeds per Flower",x="Conspecific Density", title="Potentilla") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated"), values = c("control"="circle","manip"="triangle"))+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
mert.open$undev.seeds<-(mert.open$total.seeds-mert.open$dev.seed) #creating an undeveloped seed column for cbind
mert$undev.seeds<-(mert$total.seeds-mert$dev.seed) #creating an undeveloped seed column for cbind
mert.open<-mert.open[!is.na(mert.open$prop.dev.seeds),] #removing NA values from proportion column
ggplot(mert.open, aes(x=mert.open$relative.position, y=mert.open$prop.dev.seeds, group=plot.treat)) +
labs(y="Proportion of Developed Seeds",x="Days Relative to Population Peak Bloom",title="Effect of Mertensia Blooming Time on Proportion of Developed Seeds") +
geom_point(aes(color=plot.treat),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkred","manip"="darkorange")) +
geom_smooth()
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$prop.dev.seeds/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Proportion of Developed Seeds per Flower",x="Days Relative to Population Peak Bloom",title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,8,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=7,y=0.06,label="p = 0.019")
ggplot(mert.open, aes(x=mert.open$number.conspecifics, y=mert.open$prop.dev.seeds/mert.open$flowers, group= mert.open$plot.treat)) +
labs(y="Proportion of Developed Seeds per Flower",x="Conspecific Density",title="Mertensia") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle")) +
geom_text(x=160,y=0.06,label="p < 0.01")
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$prop.dev.seeds/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Proportion of Developed Seeds per Flower",x="Days Relative to Population Peak Bloom",title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,8,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=7,y=0.06,label="p = 0.019",size=5)+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
ggplot(mert.open, aes(x=mert.open$number.conspecifics, y=mert.open$prop.dev.seeds/mert.open$flowers, group= mert.open$plot.treat)) +
labs(y="Proportion of Developed Seeds per Flower",x="Conspecific Density",title="Mertensia") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle")) +
geom_text(x=160,y=0.06,label="p < 0.01",size=5) +
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
ggplot(mert.open, aes(x=mert.open$number.conspecifics, y=mert.open$prop.dev.seeds/mert.open$flowers, group= mert.open$plot.treat)) +
labs(y="Proportion of Developed Seeds per Flower",x="Conspecific Density",title="Mertensia") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated"), values = c("control"="circle","manip"="triangle")) +
geom_text(x=160,y=0.06,label="p < 0.01",size=5) +
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
delph.open<-delph.open[!is.na(delph.open$prop.dev.seeds),] #removing NA values in proportion column
ggplot(delph.open, aes(x=delph.open$relative.position, y=delph.open$prop.dev.seeds, group=plot.treat)) +
labs(title="Effect of Delphinium Blooming Time on Proportion of Developed Seeds", y="Proportion of Developed Seeds",x="Days Relative to Population Peak Bloom") +
geom_point(aes(color=plot.treat),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkred","manip"="darkorange")) +
geom_smooth()
ggplot(delph.open, aes(x=delph.open$deviation, y=(delph.open$prop.dev.seeds/delph.open$X.flowers), group= delph.open$early.late)) +
labs(y="Proportion of Developed Seeds per Flower",x="Days Relative to Population Peak Bloom",title="Delphinium") +
theme_classic() +
scale_x_continuous(breaks=seq(0,10,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",linetype="dashed",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle"))
ggplot(delph.open, aes(x=delph.open$number.conspecifics, y=delph.open$prop.dev.seeds/delph.open$X.flowers, group= delph.open$plot.treat)) +
labs(y="Proportion of Developed Seeds per Flower",x="Conspecific Density",title="Delphinium") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle"))+
xlim(0,110)
ggplot(delph.open, aes(x=delph.open$deviation, y=(delph.open$prop.dev.seeds/delph.open$X.flowers), group= delph.open$early.late)) +
labs(y="Proportion of Developed Seeds per Flower",x="Days Relative to Population Peak Bloom",title="Delphinium") +
theme_classic() +
scale_x_continuous(breaks=seq(0,10,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",linetype="dashed",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle"))+
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
ggplot(delph.open, aes(x=delph.open$number.conspecifics, y=delph.open$prop.dev.seeds/delph.open$X.flowers, group= delph.open$plot.treat)) +
labs(y="Proportion of Developed Seeds per Flower",x="Conspecific Density",title="Delphinium") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle"))+
xlim(0,110) +
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
ggplot(delph.open, aes(x=delph.open$number.conspecifics, y=delph.open$prop.dev.seeds/delph.open$X.flowers, group= delph.open$plot.treat)) +
labs(y="Proportion of Developed Seeds per Flower",x="Conspecific Density",title="Delphinium") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated"), values = c("control"="circle","manip"="triangle"))+
xlim(0,110) +
theme(axis.text = element_text(size=12),axis.title = element_text(size=14),title = element_text(size=14),legend.text = element_text(size=12))
