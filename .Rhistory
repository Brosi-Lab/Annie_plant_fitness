summary(delph.treat.glmmtmb) #summary of model output
delph.counts.treat.simulation<-simulateResiduals(fittedModel = delph.treat.glmmtmb) #creating simulation for Delphinium mixed effects model with DHARMa package
plot(delph.counts.treat.simulation) #plotting simulation
testDispersion(delph.counts.treat.simulation) #checking for overdispersion
testZeroInflation(delph.counts.treat.simulation) #checking for zero inflation
ggplot(delph.open, aes(x=delph.open$relative.position, y=delph.open$total.seeds, group=plot.treat)) +
labs(title="Effect of Delphinium Blooming Time on Total Developed Seeds", y="Total Developed Seeds",x="Days Relative to Population Peak Bloom") +
geom_point(aes(color=plot.treat),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkred","manip"="darkorange")) +
geom_smooth()
ggplot(delph.open, aes(x=delph.open$relative.position, y=delph.open$total.seeds, group=delph.open$early.late)) +
labs(y="Total Developed Seeds",x="Days Relative to Population Peak Bloom", title="Effect of Delphinium Blooming Time on Total Developed Seeds") +
theme_classic() +
geom_point(aes(color=early.late),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
geom_smooth(method = "glm", aes(color=early.late))
ggplot(delph.open, aes(x=delph.open$deviation, y=(delph.open$total.seeds/delph.open$X.flowers), group= delph.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Delphinium") +
theme_classic() +
scale_x_continuous(breaks=seq(0,10,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=9,y=30,label="p = 0.025")
ggplot(delph.open, aes(x=delph.open$number.conspecifics, y=delph.open$total.seeds/delph.open$X.flowers, group= delph.open$plot.treat)) +
labs(y="Total Developed Seeds per Flower",x="Conspecific Density", title="Delphinium") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle"))
delph$midpoint2<-format(as.Date(delph$midpoint), format="%m-%d")
ggplot(delph, aes(x=delph$midpoint2, y=delph$total.seeds/delph$X.flowers, group= delph$treat)) +
labs(y="Total Developed Seeds per Flower",x="Date", title="Effect of Delphinium Blooming and Pollinator Activity on Total Developed Seeds") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=treat)) +
geom_smooth(aes(color=treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Open or Hand-pollinated") +
scale_color_manual(labels= c("open","open-hand"), values = c("open"="darkred","open-hand"="darkorange")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
annotate("rect",xmin="06-27", xmax="07-18",ymin=0,ymax=Inf,alpha=0.1)
pot.open<-pot[(pot$treat=="open"),] #removed hand pollination treatment
pot.nbinom<-fitdist(pot.open$total.seeds, "nbinom") #fitting negative binomial distribution using fitdistplus package
plot(pot.nbinom) #plotting distribution fit
#pot.glmmtmb<-glmmTMB(total.seeds ~ X.flowers:(deviation * early.late) + X.flowers:number.conspecifics/plot.treat + (1|site), family = "nbinom2", data = pot.open) #Potentilla model for negative binomial data with glmmTMB package
#summary(pot.glmmtmb) #summary of model output
#pot.counts.simulation<-simulateResiduals(fittedModel = pot.glmmtmb) #creating simulation for Potentilla mixed effects model with DHARMa package
#plot(pot.counts.simulation) #plotting simulation
#testDispersion(pot.counts.simulation) #checking for overdispersion
#testZeroInflation(pot.counts.simulation) #checking for zero inflation
pot.glmmtmb<-glmmTMB(total.seeds ~ X.flowers:(deviation * early.late) + X.flowers:number.conspecifics/plot.treat + (1|site), ziformula=~1, family = "nbinom2", data = pot.open) #new Potentilla model for negative binomial data with glmmTMB package
summary(pot.glmmtmb) #summary of model output
pot.counts.simulation<-simulateResiduals(fittedModel = pot.glmmtmb) #creating simulation for Potentilla mixed effects model with DHARMa package
plot(pot.counts.simulation) #plotting simulation
testDispersion(pot.counts.simulation) #checking for overdispersion
testZeroInflation(pot.counts.simulation) #checking for zero inflation
#pot.treat.glmmtmb<-glmmTMB(total.seeds ~ treat/X.flowers + (1|site/plot.treat), family = "nbinom2", data = pot) #Potentilla model for negative binomial data with glmmadmb package
#summary(pot.treat.glmmtmb) #summary of model output
#pot.counts.treat.simulation<-simulateResiduals(fittedModel = pot.treat.glmmtmb) #creating simulation for Potentilla mixed effects model with DHARMa package
#plot(pot.counts.treat.simulation) #plotting simulation
#testDispersion(pot.counts.treat.simulation) #checking for overdispersion
#testZeroInflation(pot.counts.treat.simulation) #checking for zero inflation
pot.treat.glmmtmb<-glmmTMB(total.seeds ~ treat/X.flowers + (1|site/plot.treat), ziformula=~1, family="nbinom2",data = pot) #Potentilla model for negative binomial data with glmmadmb package
summary(pot.treat.glmmtmb) #summary of model output
pot.counts.treat.simulation<-simulateResiduals(fittedModel = pot.treat.glmmtmb) #creating simulation for Potentilla mixed effects model with DHARMa package
plot(pot.counts.treat.simulation) #plotting simulation
testDispersion(pot.counts.treat.simulation) #checking for overdispersion
testZeroInflation(pot.counts.treat.simulation) #checking for zero inflation
ggplot(pot.open, aes(x=pot.open$relative.position, y=pot.open$total.seeds, group=plot.treat)) +
labs(title="Effect of Potentilla Blooming Time on Total Developed Seeds", y="Total Developed Seeds",x="Days Relative to Population Peak Bloom") +
geom_point(aes(color=plot.treat),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkred","manip"="darkorange")) +
geom_smooth()
ggplot(pot.open, aes(x=pot.open$relative.position, y=pot.open$total.seeds, group=pot.open$early.late)) +
labs(y="Total Developed Seeds",x="Days Relative to Population Peak Bloom", title="Effect of Potentilla Blooming Time on Total Developed Seeds") +
theme_classic() +
geom_point(aes(color=early.late),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
geom_smooth(method = "glm", aes(color=early.late))
ggplot(pot.open, aes(x=pot.open$deviation, y=pot.open$total.seeds/pot.open$X.flowers, group= pot.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom",title="Potentilla") +
theme_classic() +
scale_x_continuous(breaks=seq(0,24,2)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=22,y=17,label="p < 0.01")
ggplot(pot.open, aes(x=pot.open$number.conspecifics, y=pot.open$total.seeds/pot.open$X.flowers, group= pot.open$plot.treat)) +
labs(y="Total Developed Seeds per Flower",x="Conspecific Density", title="Potentilla") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle"))
ggplot(pot,aes(x=as.Date.factor(pot$midpoint), y=pot$total.seeds/pot$X.flowers, group= pot$treat)) +
labs(y="Total Developed Seeds per Flower",x="Date", title="Pollinator Activity Period and Total Developed Seeds in Potentilla") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=treat)) +
geom_smooth(aes(color=treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Open or Hand-pollinated") +
scale_color_manual(labels= c("open","open-hand"), values = c("open"="darkred","open-hand"="darkorange")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
annotate("rect",xmin=as.Date.character("2019-07-05"), xmax=as.Date.character("2019-08-24"),ymin=0,ymax=Inf,alpha=0.1) +
scale_x_date(date_breaks = "3 days", date_labels = "%m/%d")
mert.binom<-fitdist(mert.open$prop.dev.seeds, "norm",start = NULL) #fitting Mertensia data to binomial distribution with normal errors using fitdistplus
plot(mert.binom) #plotting to see the fit
mert.open$undev.seeds<-(mert.open$total.seeds-mert.open$dev.seed) #creating an undeveloped seed column for cbind
mert$undev.seeds<-(mert$total.seeds-mert$dev.seed) #creating an undeveloped seed column for cbind
Mert.prop.glmmtmb<-glmmTMB(cbind(dev.seed,undev.seeds) ~ flowers:(deviation * early.late) + flowers:number.conspecifics/plot.treat + (1|site), family = binomial, data = mert.open) #Mertensia model with proportion of developed seeds using the glmmTMB package
summary(Mert.prop.glmmtmb)
mert.prop.simulation<-simulateResiduals(fittedModel = Mert.prop.glmmtmb) #creating simulation for Mertensia mixed effects model with DHARMa package
plot(mert.prop.simulation) #plotting simulation
testDispersion(mert.prop.simulation) #checking for overdispersion
testZeroInflation(mert.prop.simulation)
Mert.prop.treat.glmmtmb<-glmmTMB(cbind(dev.seed,undev.seeds) ~ treat/flowers + (1|site/plot.treat), family = binomial, data = mert) #model with pollen lim treatment and proportion of developed seeds using the glmmTMB package
summary(Mert.prop.treat.glmmtmb) #summary of model results
mert.prop.treat.simulation<-simulateResiduals(fittedModel = Mert.prop.treat.glmmtmb) #creating simulation for Mertensia mixed effects model with DHARMa package
plot(mert.prop.treat.simulation) #plotting simulation
testDispersion(mert.prop.treat.simulation) #checking for overdispersion
testZeroInflation(mert.prop.treat.simulation) #checking for zero inflation
mert.open<-mert.open[!is.na(mert.open$prop.dev.seeds),] #removing NA values from proportion column
ggplot(mert.open, aes(x=mert.open$relative.position, y=mert.open$prop.dev.seeds, group=plot.treat)) +
labs(y="Proportion of Developed Seeds",x="Days Relative to Population Peak Bloom",title="Effect of Mertensia Blooming Time on Proportion of Developed Seeds") +
geom_point(aes(color=plot.treat),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkred","manip"="darkorange")) +
geom_smooth()
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$prop.dev.seeds/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Proportion of Developed Seeds per Flower",x="Days Relative to Population Peak Bloom",title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,6,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle"))
ggplot(mert.open, aes(x=mert.open$number.conspecifics, y=mert.open$prop.dev.seeds/mert.open$flowers, group= mert.open$plot.treat)) +
labs(y="Proportion of Developed Seeds per Flower",x="Conspecific Density",title="Mertensia") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle"))
ggplot(mert, aes(x=as.Date.factor(mert$midpoint), y=mert$prop.dev.seeds/mert$flowers, group= mert$treat)) +
labs(y="Proportion of Developed Seeds per Flower",x="Date", title="Pollinator Activity Period and Proportion of Developed Seeds in Mertensia") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=treat)) +
geom_smooth(aes(color=treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Open or Hand-pollinated") +
scale_color_manual(labels= c("open","open-hand"), values = c("open"="darkred","open-hand"="darkorange")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
annotate("rect",xmin=as.Date.character("2019-06-19"), xmax=as.Date.character("2019-07-03"),ymin=0,ymax=Inf,alpha=0.1) +
scale_x_date(date_breaks = "3 days", date_labels = "%m/%d")
delph.binom<-fitdist(delph.open$prop.dev.seeds, "norm") #fitting delphinium data to binomial distribution with normal errors using fitdistplus
plot(delph.binom) #plotting to see the fit
Delph.prop.glmmtmb<-glmmTMB(cbind(dev.seed.total,undev.seed.total) ~ X.flowers:(deviation * early.late) + X.flowers:number.conspecifics/plot.treat + (1|site), family = betabinomial, data = delph.open) #modeling Delphinium proportion of developed seeds with glmmTMB package
summary(Delph.prop.glmmtmb)
delph.prop.simulation<-simulateResiduals(fittedModel = Delph.prop.glmmtmb) #creating simulation for Delphinium model
plot(delph.prop.simulation) #plotting simulation
testDispersion(delph.prop.simulation) #checking for overdispersion
testZeroInflation(delph.prop.simulation) #checking for zero inflation
Delph.prop.treat.glmmtmb<-glmmTMB(cbind(dev.seed.total,undev.seed.total) ~ treat/X.flowers + (1|site/plot.treat), family = betabinomial, data = delph) #modeling pollen lim and proportion of developed seeds with glmmTMB package
summary(Delph.prop.treat.glmmtmb) #model summary
delph.prop.treat.simulation<-simulateResiduals(fittedModel = Delph.prop.treat.glmmtmb) #creating simulation for Delphinium model
plot(delph.prop.treat.simulation) #plotting simulation
testDispersion(delph.prop.treat.simulation) #checking for overdispersion
testZeroInflation(delph.prop.treat.simulation) #checking for zero inflation
delph.open<-delph.open[!is.na(delph.open$prop.dev.seeds),] #removing NA values in proportion column
ggplot(delph.open, aes(x=delph.open$relative.position, y=delph.open$prop.dev.seeds, group=plot.treat)) +
labs(title="Effect of Delphinium Blooming Time on Proportion of Developed Seeds", y="Proportion of Developed Seeds",x="Days Relative to Population Peak Bloom") +
geom_point(aes(color=plot.treat),size=3, alpha = 0.8) +
scale_color_brewer(palette="Dark2") + labs(color="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated"), values = c("control"="darkred","manip"="darkorange")) +
geom_smooth()
ggplot(delph.open, aes(x=delph.open$deviation, y=(delph.open$prop.dev.seeds/delph.open$X.flowers), group= delph.open$early.late)) +
labs(y="Proportion of Developed Seeds per Flower",x="Days Relative to Population Peak Bloom",title="Delphinium") +
theme_classic() +
scale_x_continuous(breaks=seq(0,10,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",linetype="dashed",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle"))
ggplot(delph.open, aes(x=delph.open$number.conspecifics, y=delph.open$prop.dev.seeds/delph.open$X.flowers, group= delph.open$plot.treat)) +
labs(y="Proportion of Developed Seeds per Flower",x="Conspecific Density",title="Delphinium") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle"))+
xlim(0,110)
ggplot(delph, aes(x=as.Date.factor(delph$midpoint), y=delph$prop.dev.seeds/delph$X.flowers, group= delph$treat)) +
labs(y="Proportion of Developed Seeds per Flower",x="Date", title="Pollinator Activity Period and Proportion of Developed Seeds in Delphinium") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=treat)) +
geom_smooth(aes(color=treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Open or Hand-pollinated") +
scale_color_manual(labels= c("open","open-hand"), values = c("open"="darkred","open-hand"="darkorange")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
annotate("rect",xmin=as.Date.character("2019-06-27"), xmax=as.Date.character("2019-07-18"),ymin=0,ymax=Inf,alpha=0.1) +
scale_x_date(date_breaks = "3 days", date_labels = "%m/%d")
#Mertensia plots with total developed seeds per flower and proportion of developed seeds per flower
ggplot(mert, aes(x=treat, y=dev.seed/flowers)) +
labs(y="Total developed seeds", x="Pollen limitation treatment", title="Effect of pollen supplementation on Mertensia total developed seeds") +
theme_classic() +
geom_col()
ggplot(mert, aes(x=treat, y=prop.dev.seeds/flowers)) +
labs(y="Proportion developed seeds", x="Pollen limitation treatment",title="Effect of pollen supplementation on Mertensia proportion of developed seeds") +
theme_classic() +
geom_col()
#Delphinium plots with total developed seeds per flower and proportion of developed seeds per flower
ggplot(delph, aes(x=treat, y=total.seeds/X.flowers)) +
labs(y="Total developed seeds", x="Pollen limitation treatment",title="Effect of pollen supplementation on Delphinium total developed seeds") +
theme_classic() +
geom_col()
ggplot(delph, aes(x=treat, y=prop.dev.seeds/X.flowers)) +
labs(y="Proportion developed seeds", x="Pollen limitation treatment",title="Effect of pollen supplementation on Delphinium proportion of developed seeds") +
theme_classic() +
geom_col()
#Potentilla plots with total developed seeds per flower
ggplot(pot, aes(x=treat, y=total.seeds/X.flowers)) +
labs(y="Total developed seeds", x="Pollen limitation treatment",title="Effect of pollen supplementation on Potentilla total developed seeds") +
theme_classic() +
geom_col()
#number of Mertensia flowers in each plot treatment
ggplot(mert, aes(x=plot.treat, y=flowers)) +
labs(y="Number of flowers", x="Plot treatment",title="Effect of plot treatment on Mertensia flower number") +
theme_classic() +
geom_col()
#number of Delphinium flowers in each plot treatment
ggplot(delph,aes(x=plot.treat, y=X.flowers)) +
labs(y="Number of flowers", x="Plot treatment",title="Effect of plot treatment on Delphinium flower number") +
theme_classic() +
geom_col()
#number of Potentilla flowers in each plot treatment
ggplot(pot,aes(x=plot.treat, y=X.flowers)) +
labs(y="Number of flowers", x="Plot treatment",title="Effect of plot treatment on Potentilla flower number") +
theme_classic() +
geom_col()
sessionInfo()
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,9,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=9,y=2,label="p = 0.088")
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,9,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=8,y=2,label="p = 0.088")
ggplot(mert.open, aes(x=mert.open$number.conspecifics, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$plot.treat)) +
labs(y="Total Developed Seeds per Flower",x="Conspecific Density", title="Mertensia") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",linetype="dashed",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle"))
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$prop.dev.seeds/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Proportion of Developed Seeds per Flower",x="Days Relative to Population Peak Bloom",title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,8,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=8,y=0.06,label="p = 0.019")
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$prop.dev.seeds/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Proportion of Developed Seeds per Flower",x="Days Relative to Population Peak Bloom",title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,8,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=7,y=0.06,label="p = 0.019")
ggplot(mert.open, aes(x=mert.open$number.conspecifics, y=mert.open$prop.dev.seeds/mert.open$flowers, group= mert.open$plot.treat)) +
labs(y="Proportion of Developed Seeds per Flower",x="Conspecific Density",title="Mertensia") +
theme_classic() +
geom_point(size=3, alpha = 0.8, aes(color=plot.treat,shape=plot.treat)) +
geom_smooth(method="glm",aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Plot Treatment",shape="Plot Treatment") +
scale_color_manual(labels= c("control","accelerated snowmelt"), values = c("control"="darkgreen","manip"="blue")) +
scale_shape_manual(labels= c("control","accelerated snowmelt"), values = c("control"="circle","manip"="triangle")) +
geom_text(x=160,y=0.06,label="p < 0.01")
ggplot(mert.open, aes(x=mert.open$deviation, y=mert.open$dev.seed/mert.open$flowers, group= mert.open$early.late)) +
labs(y="Total Developed Seeds per Flower",x="Days Relative to Population Peak Bloom", title="Mertensia") +
theme_classic() +
scale_x_continuous(breaks=seq(0,9,1)) +
geom_point(size=3, alpha = 0.8, aes(color=early.late,shape=early.late)) +
geom_smooth(method="glm",aes(color=early.late)) +
scale_color_brewer(palette="Dark2") +
labs(color="Before or After Peak",shape="Before or After Peak") +
scale_color_manual(labels= c("before peak","after peak"), values = c("early"="darkred","late"="darkorange")) +
scale_shape_manual(labels= c("before peak","after peak"), values = c("early"="circle","late"="triangle")) +
geom_text(x=7,y=2,label="p = 0.088")
source("~/Annie-plant-fitness/Revisions_plots.R")
library(ggplot2)
library(scales)
mert.counts.by.site$date<-as.Date(mert.counts.by.site$date)
delph.counts.by.site$date<-as.Date(delph.counts.by.site$date)
pot.counts.by.site$date<-as.Date(pot.counts.by.site$date)
### By plot treatment
#plotting Mertensia flower counts
ggplot(mert.counts.by.site,aes(x=date,y=number.conspecifics,group=plot.treat)) +
theme_classic() +
labs(y="Floral Abundance",x="Week",title = "Mertensia Peak Bloom") +
geom_point(aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Site") +
geom_smooth(aes(color=plot.treat),se=FALSE) +
theme(axis.text.x = element_text(angle = 90)) +
scale_x_date(date_breaks = "1 week",
limits = as.Date(c('2019-06-07','2019-07-18')),
labels = date_format(format = "%W"))
#plotting Delphinium flower counts
ggplot(delph.counts.by.site,aes(x=date,y=number.conspecifics,group=plot.treat)) +
theme_classic() +
labs(y="Floral Abundance",x="Week", title = "Delphinium Peak Bloom") +
geom_point(aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Site") +
geom_smooth(aes(color=plot.treat),se=FALSE) +
theme(axis.text.x = element_text(angle = 90)) +
scale_x_date(date_breaks = "1 week",
limits = as.Date(c('2019-06-18','2019-07-25')),
labels = date_format(format = "%W"))
#plotting Potentilla flower counts
ggplot(pot.counts.by.site,aes(x=date,y=number.conspecifics,group=plot.treat)) +
theme_classic() +
labs(y="Floral Abundance",x="Week", title = "Potentilla Peak Bloom") +
geom_point(aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Site") +
geom_smooth(aes(color=plot.treat),se=FALSE) +
theme(axis.text.x = element_text(angle = 90))+
scale_x_date(date_breaks = "1 week",
limits = as.Date(c('2019-07-11','2019-08-25')),
labels = date_format(format = "%W"))
#plotting all together
mert.counts.by.site<-mert.counts.by.site %>% mutate(species="Mertensia")
delph.counts.by.site<-delph.counts.by.site%>% mutate(species="Delphinium")
pot.counts.by.site<-pot.counts.by.site %>% mutate(species="Potentilla")
all.spec.bloom<-rbind(mert.counts.by.site,delph.counts.by.site,pot.counts.by.site)
ggplot(all.spec.bloom,aes(x=date,y=number.conspecifics,
group=interaction(plot.treat,species),color=species)) +
theme_classic() +
labs(y="Floral Abundance",x="Week", title = "Peak Bloom by Species") +
geom_point() +
scale_color_brewer(palette="Dark2") +
labs(color="Species",lty="Plot Treatment") +
geom_smooth(aes(lty=plot.treat),se=FALSE) +
theme(axis.text.x = element_text(angle = 90))+
scale_x_date(date_breaks = "1 week",
limits = as.Date(c('2019-06-04','2019-08-25')),
labels = date_format(format = "%W"))
### By site
#plotting Mertensia flower counts
ggplot(mert.counts.by.site,aes(x=date,y=number.conspecifics,group=site)) +
theme_classic() +
labs(y="Floral Abundance",x="Week",title = "Mertensia Peak Bloom") +
geom_point(aes(color=plot.treat)) +
scale_color_brewer(palette="Dark2") +
labs(color="Site") +
geom_smooth(aes(color=site),se=FALSE) +
theme(axis.text.x = element_text(angle = 90)) +
scale_x_date(date_breaks = "1 week",
limits = as.Date(c('2019-06-07','2019-07-18')),
labels = date_format(format = "%W"))
#plotting Delphinium flower counts
ggplot(delph.counts.by.site,aes(x=date,y=number.conspecifics,group=site)) +
theme_classic() +
labs(y="Floral Abundance",x="Week", title = "Delphinium Peak Bloom") +
geom_point(aes(color=site)) +
scale_color_brewer(palette="Dark2") +
labs(color="Site") +
geom_smooth(aes(color=site),se=FALSE) +
theme(axis.text.x = element_text(angle = 90)) +
scale_x_date(date_breaks = "1 week",
limits = as.Date(c('2019-06-18','2019-07-25')),
labels = date_format(format = "%W"))
#plotting Potentilla flower counts
ggplot(pot.counts.by.site,aes(x=date,y=number.conspecifics,group=site)) +
theme_classic() +
labs(y="Floral Abundance",x="Week", title = "Potentilla Peak Bloom") +
geom_point(aes(color=site)) +
scale_color_brewer(palette="Dark2") +
labs(color="Site") +
geom_smooth(aes(color=site),se=FALSE) +
theme(axis.text.x = element_text(angle = 90))+
scale_x_date(date_breaks = "1 week",
limits = as.Date(c('2019-07-11','2019-08-25')),
labels = date_format(format = "%W"))
#plotting all sites/treatments together
#Mertensia
ggplot(mert.counts.by.site,aes(x=date,y=number.conspecifics)) +
theme_classic() +
geom_point() +
geom_smooth(se=FALSE,color="darkgreen") +
geom_vline(xintercept=as.Date("2019-06-27")) +
geom_vline(xintercept = as.Date("2019-06-20"),linetype="dotdash") +
labs(y="Floral Abundance",x="Week", title = "Mertensia Peak Bloom") +
scale_color_brewer(palette="Dark2") +
theme(axis.text.x = element_text(angle = 90))+
scale_x_date(date_breaks = "1 week",
limits = as.Date(c('2019-06-07','2019-07-18')),
labels = date_format(format = "%W"))
#Delphinium
ggplot(delph.counts.by.site,aes(x=date,y=number.conspecifics)) +
theme_classic() +
geom_point() +
geom_smooth(se=FALSE,color="darkgreen") +
geom_vline(xintercept=as.Date("2019-07-06")) +
labs(y="Floral Abundance",x="Week", title = "Delphinium Peak Bloom") +
scale_color_brewer(palette="Dark2") +
theme(axis.text.x = element_text(angle = 90))+
scale_x_date(date_breaks = "1 week",
limits = as.Date(c('2019-06-18','2019-07-25')),
labels = date_format(format = "%W"))
#Potentilla
ggplot(pot.counts.by.site,aes(x=date,y=number.conspecifics)) +
theme_classic() +
geom_point() +
geom_smooth(se=FALSE,color="darkgreen") +
geom_vline(xintercept=as.Date("2019-08-02")) +
labs(y="Floral Abundance",x="Week", title = "Potentilla Peak Bloom") +
scale_color_brewer(palette="Dark2") +
theme(axis.text.x = element_text(angle = 90))+
scale_x_date(date_breaks = "1 week",
limits = as.Date(c('2019-07-11','2019-08-25')),
labels = date_format(format = "%W"))
#plotting all sites/treatments together
#Mertensia
ggplot(mert.counts.by.site,aes(x=date,y=number.conspecifics)) +
theme_classic() +
geom_point() +
geom_smooth(se=FALSE,color="darkgreen") +
geom_vline(xintercept=as.Date("2019-06-27")) +
geom_vline(xintercept = as.Date("2019-06-20"),linetype="dotdash") +
labs(y="Floral Abundance",x="Week", title = "Mertensia Peak Bloom") +
scale_color_brewer(palette="Dark2") +
scale_x_date(date_breaks = "1 week",
limits = as.Date(c('2019-06-07','2019-07-18')),
labels = date_format(format = "%W"))
#Delphinium
ggplot(delph.counts.by.site,aes(x=date,y=number.conspecifics)) +
theme_classic() +
geom_point() +
geom_smooth(se=FALSE,color="darkgreen") +
geom_vline(xintercept=as.Date("2019-07-06")) +
labs(y="Floral Abundance",x="Week", title = "Delphinium Peak Bloom") +
scale_color_brewer(palette="Dark2") +
scale_x_date(date_breaks = "1 week",
limits = as.Date(c('2019-06-18','2019-07-25')),
labels = date_format(format = "%W"))
#Potentilla
ggplot(pot.counts.by.site,aes(x=date,y=number.conspecifics)) +
theme_classic() +
geom_point() +
geom_smooth(se=FALSE,color="darkgreen") +
geom_vline(xintercept=as.Date("2019-08-02")) +
labs(y="Floral Abundance",x="Week", title = "Potentilla Peak Bloom") +
scale_color_brewer(palette="Dark2") +
scale_x_date(date_breaks = "1 week",
limits = as.Date(c('2019-07-11','2019-08-25')),
labels = date_format(format = "%W"))
knitr::opts_chunk$set(echo = TRUE)
flower.counts=read.csv("./Raw_data/flower_counts.csv") #read in flower count data
mert.flower.counts<-flower.counts[(flower.counts$plant=="Mertensia fusiformis"),] #limit flower counts to Mertensia data
View(mert.flower.counts)
